################### Examples of server scripts for daily tasks ########################

# Example 1) Class to send e-mails from Python scripts
import smtplib

# Saved as EmailService.py
class EmailService(object):

    def __init__(self):
        self.YOUREMAIL = 'your e-mail address which messages will be sent from'

    def configMessage(self, subject, body):
        self.msg = 'Subject: {0}\n{1}'.format(subject, body)
        return self.msg

    def sendEmail(self, recip_email):
        # Do a Google search for smtp settings for your e-mail provider
        self.smtpObj = smtplib.SMTP('smtp.gmail.com', 587)
        self.smtpObj.ehlo()
        self.smtpObj.starttls()
        # We created a special gmail account just for this purpose and hard coded
        # the password here
        self.smtpObj.login(self.YOUREMAIL, 'YOUR PASSWORD')
        self.smtpObj.sendmail(self.YOUREMAIL, recip_email, self.msg)
        self.smtpObj.quit()
	
	
#######################################################################################

# Example 2) Class to compile joined layers to increase web map performance
import arcpy
arcpy.env.overwriteOutput = True

# Saved as CompiledLayers.py
class CompiledLayers(object):
    """Custom class to create compiled layers in lieu of joined layers on
    web maps."""
    def __init__(self):
        self.ignore = ['OBJECTID', 'Shape', 'Shape.STArea()',
                       'Shape.STLength()', 'STArea()', 'STLength()',
                       'GlobalID', 'ESRI_OID', 'SHAPE' ]

    def createCompiledLayer(self, join_fc, in_field, join_table,
                            join_field, join_type, target_fc):
        """Makes feature layer, joins to sql server table, sets up fieldmapping,
        deletes and appends target feature class in gjgisweb.sde."""
        arcpy.MakeFeatureLayer_management(join_fc, 'temp_lyr')
        arcpy.AddJoin_management('temp_lyr', in_field, join_table, join_field,
                                 join_type)

        target_fields = [f for f in arcpy.ListFields(target_fc)
                         if f.name not in self.ignore]
        append_fields = [f for f in arcpy.ListFields('temp_lyr')
                         if f.name.split('.')[-1] not in self.ignore]

        fields_to_map = []
        for a in append_fields:
            for t in target_fields:
                if a.name.split('.')[-1].lower() == t.name.lower():
                    fields_to_map.append((a.name, t.name))

        fieldmapping = arcpy.FieldMappings()
        for fields in fields_to_map:
            field_map = arcpy.FieldMap()
            field_map.addInputField('temp_lyr', fields[0])
            field_map.addInputField(target_fc, fields[1])
            fieldmapping.addFieldMap(field_map)

        arcpy.DeleteFeatures_management(target_fc)
        arcpy.Append_management('temp_lyr', target_fc, 'NO_TEST', fieldmapping)


		
################################ Example of Use #######################################
import CompiledLayers as CL
import EmailService as ES

def getTime():
    """Function to fetch current date and time."""
    date_time = time.strftime("%Y%m%d") + "_" + time.strftime("%H%M%S")
    return date_time

# Set path to log file
log = 'T:\\Scripts\\Log\\CompileNorthstarTrashParcels' + getTime() + '.txt'

# Set variables
join_fc    = 'T:\\Scripts\\dbConnections\\gjgisprod.sde\\gjgisprod.DBO.Parcel'
in_field   = 'PARCEL_NUM'
join_table = 'T:\\Scripts\\dbConnections\\ns.sde\\Northstar64_Live.dbo.gj_trashdata'
join_field = 'PARCEL'
join_type  = 'KEEP_COMMON'
target_fc  = 'T:\\Scripts\\dbConnections\\gjgisweb.sde\\gjgisweb.DBO.CompiledLayers\\gjgisweb.DBO.northstarTrashParcels'

with open(log, 'w') as log_file:
    try:
        log_file.write('Calling CompiledLayers module at ' + getTime() + '\n')
        compiler = CL.CompiledLayers()
        compiler.createCompiledLayer(join_fc, in_field, join_table, join_field,
                                     join_type, target_fc)
        log_file.write('Succeeded creating compiled layer at ' + getTime())

    except Exception as e:
        log_file.write('Failed at ' + getTime() + '\n')
        log_file.write(e.message)

        # Send email to server admin if script fails
        service = ES.EmailService()
        subject = 'Server Script Failure!'
        body = 'CompiledNorthstarTrashParcels.py failed'
        recip = 'jacksont@gjcity.org'
        service.configMessage(subject, body)
        service.sendEmail(recip)